---

- hosts: localhost
  user: vagrant
  sudo: True

  vars:
    app_name: netmgmt
    repo_url: https://github.com/that1guy15/NetMgmt.git
    ntc_ansible_url: https://github.com/networktocode/ntc-ansible
    napalm_url: https://github.com/napalm-automation/napalm-ansible.git
    repo_remote: origin
    repo_version: master
    webapps_dir: /srv
    virt_dir: "{{webapps_dir}}/{{app_name}}/venv/bin"
    library_dir: "{{webapps_dir}}/{{app_name}}/library"
    wsgi_file: wsgi.py
    wsgi_callable: app

  tasks:
    - name: install dependencies into virtualenv
      pip:
        requirements: "{{webapps_dir}}/{{app_name}}/requirements.txt"
        virtualenv: "{{webapps_dir}}/{{app_name}}/venv"
        state: present

    - name: create playbook directory
      action: file dest={{webapps_dir}}/{{app_name}}/playbooks state=directory

    - name: create inventory directory
      action: file dest={{webapps_dir}}/{{app_name}}/inventory state=directory

    - name: download ntc-ansible to library
      action: git repo={{ntc_ansible_url}} dest={{library_dir}}/ntc-ansible remote={{repo_remote}} version={{repo_version}} recursive=yes

    - name: install ntc-ansible
      command: "{{virt_dir}}/python {{library_dir}}/ntc-ansible/setup.py install"

    - name: download napalm to library
      action: git repo={{napalm_url}} dest={{library_dir}}/napalm remote={{repo_remote}} version={{repo_version}}

    - name: create inventory directory
      action: file dest={{webapps_dir}}/{{app_name}}/inventory state=directory

    - name: create log directory
      action: file dest={{webapps_dir}}/{{app_name}}/log state=directory

    - name: create supervisor program config
      action: template src=templates/supervisor.ini dest=/etc/supervisor/{{app_name}}.ini
      notify:
        - restart app

    - name: create nginx site config
      action: template src=templates/nginx_site.conf dest=/etc/nginx/sites-available/{{app_name}}.conf
      notify:
        - restart nginx

    - name: link nginx config
      action: file src=/etc/nginx/sites-available/{{app_name}}.conf dest=/etc/nginx/sites-enabled/{{app_name}}.conf state=link

    - name: restart supervisor program 
      service:
        name: supervisord
        state: restarted

    - name: restart nginx program 
      service:
        name: nginx
        state: restarted

    - name: start app
      action: supervisorctl name={{app_name}} state=restarted

    - name: cleanup deploy files
      file:
        state: absent
        path: "{{webapps_dir}}/{{app_name}}/deploy"

  handlers:
    - name: restart app
      action: supervisorctl name={{app_name}} state=restarted

    - name: restart nginx
      action: service name=nginx state=restarted
